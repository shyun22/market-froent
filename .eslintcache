[{"/home/ubuntu/ci-cd/market-froent/src/index.js":"1","/home/ubuntu/ci-cd/market-froent/src/App.js":"2","/home/ubuntu/ci-cd/market-froent/src/reportWebVitals.js":"3","/home/ubuntu/ci-cd/market-froent/src/HaderPage.js":"4","/home/ubuntu/ci-cd/market-froent/src/main/index.js":"5","/home/ubuntu/ci-cd/market-froent/src/upload/index.js":"6","/home/ubuntu/ci-cd/market-froent/src/product/index.js":"7","/home/ubuntu/ci-cd/market-froent/src/config/constants.js":"8","/home/ubuntu/ci-cd/market-froent/src/components/productCard.js":"9"},{"size":592,"mtime":1666319644277,"results":"10","hashOfConfig":"11"},{"size":1049,"mtime":1666321532322,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1666319644277,"results":"13","hashOfConfig":"11"},{"size":655,"mtime":1666321361640,"results":"14","hashOfConfig":"11"},{"size":1855,"mtime":1666319644277,"results":"15","hashOfConfig":"11"},{"size":3783,"mtime":1666319644277,"results":"16","hashOfConfig":"11"},{"size":2703,"mtime":1666319644277,"results":"17","hashOfConfig":"11"},{"size":147,"mtime":1666321650733,"results":"18","hashOfConfig":"11"},{"size":1271,"mtime":1666319644277,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1lug93w",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"/home/ubuntu/ci-cd/market-froent/src/index.js",[],["45","46"],"/home/ubuntu/ci-cd/market-froent/src/App.js",["47","48","49","50"],"import { Link, useHistory } from \"react-router-dom\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Button } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport HaderPage from \"./HaderPage\";\nimport MainPageComponent from \"./main\";\nimport UploadPage from \"./upload\";\nimport ProductPage from \"./product\";\n\nfunction App() {\n    const history = useHistory();\n    return (\n        <div>\n            <div id=\"header\">\n                <HaderPage />\n            </div>\n            <div id=\"body\">\n                <switch>\n                    <Route exact={true} path=\"/\">\n                        <MainPageComponent />\n                    </Route>\n                    <Route exact={true} path=\"/products/:id\">\n                        <ProductPage />\n                    </Route>\n                    <Route exact={true} path=\"/upload\">\n                        <UploadPage />\n                    </Route>\n                </switch>\n            </div>\n            <div id=\"footer\"></div>\n        </div>\n    );\n}\n\nexport default App;\n","/home/ubuntu/ci-cd/market-froent/src/reportWebVitals.js",[],"/home/ubuntu/ci-cd/market-froent/src/HaderPage.js",["51"],"import { DownloadOutlined } from \"@ant-design/icons\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button } from \"antd\";\n\nfunction HaderPage() {\n    const history = useHistory();\n    return (\n        <div id=\"header-area\">\n            <Link to=\"/\">\n                <img src=\"/images/icons/logo.png\" />\n            </Link>\n            <Button\n                size=\"large\"\n                onClick={function () {\n                    history.push(\"/upload\");\n                }}\n                icon={<DownloadOutlined />}\n            >\n                상품 업로드\n            </Button>\n        </div>\n    );\n}\n\nexport default HaderPage;\n","/home/ubuntu/ci-cd/market-froent/src/main/index.js",["52"],"import React from \"react\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport { API_URL } from \"../config/constants.js\";\nimport { Carousel, Spin } from \"antd\";\nimport \"dayjs/locale/ko\";\nimport ProductCard from \"../components/productCard\";\n\ndayjs.extend(relativeTime);\ndayjs.locale(\"ko\");\n\nfunction MainPage() {\n  const [products, setProducts] = React.useState([]);\n  const [banners, setBanners] = React.useState([]);\n  React.useEffect(function () {\n    axios\n      .get(`${API_URL}/products`)\n      .then(function (result) {\n        const products = result.data.products;\n        setProducts(products);\n      })\n      .catch(function (error) {\n        console.error(\"에러 발생 : \", error);\n      });\n\n    axios\n      .get(`${API_URL}/banners`)\n      .then((result) => {\n        const banners = result.data.banners;\n        setBanners(banners);\n      })\n      .catch((error) => {\n        console.error(\"에러 발생 : \", error);\n      });\n  }, []);\n  if (products.length === 0) {\n    return (\n      <div style={{ textAlign: \"center\", paddingTop: 32 }}>\n        <Spin size=\"large\" />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Carousel autoplay autoplaySpeed={3000}>\n        {banners.map((banner, index) => {\n          return (\n            <Link to={banner.href}>\n              <div id=\"banner\">\n                <img src={`${API_URL}/${banner.imageUrl}`} />\n              </div>\n            </Link>\n          );\n        })}\n      </Carousel>\n      <h1 id=\"product-headline\">판매되는 상품들</h1>\n      <div id=\"product-list\">\n        {products.map(function (product, index) {\n          return <ProductCard product={product} key={index} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n","/home/ubuntu/ci-cd/market-froent/src/upload/index.js",["53","54","55"],"import {\n  Form,\n  Divider,\n  Input,\n  InputNumber,\n  Button,\n  Upload,\n  message,\n} from \"antd\";\nimport \"./index.css\";\nimport { ForkOutlined } from \"@ant-design/icons\";\nimport { useState } from \"react\";\nimport { API_URL } from \"../config/constants\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction UploadPage() {\n  const [imageUrl, setImageUrl] = useState(null);\n  const history = useHistory();\n\n  const onSubmit = (values) => {\n    axios\n      .post(`${API_URL}/products`, {\n        name: values.name,\n        description: values.description,\n        seller: values.seller,\n        price: parseInt(values.price),\n        imageUrl: imageUrl,\n      })\n      .then((result) => {\n        console.log(result);\n        history.replace(\"/\");\n      })\n      .catch((error) => {\n        console.error(error);\n        message.error(`에러가 발생했습니다. ${error.message}`);\n      });\n  };\n  const onChangeImage = (info) => {\n    if (info.file.status === \"uploading\") {\n      return;\n    }\n    if (info.file.status === \"done\") {\n      const response = info.file.response;\n      const imageUrl = response.imageUrl;\n      setImageUrl(imageUrl);\n    }\n  };\n  return (\n    <div id=\"upload-container\">\n      <Form name=\"상품 업로드\" onFinish={onSubmit}>\n        <Form.Item\n          name=\"upload\"\n          label={<div className=\"upload-label\">상품 사진</div>}\n        >\n          <Upload\n            name=\"image\"\n            action={`${API_URL}/image`}\n            listType=\"picture\"\n            showUploadList={false}\n            onChange={onChangeImage}\n          >\n            {imageUrl ? (\n              <img id=\"upload-img\" src={`${API_URL}/${imageUrl}`} />\n            ) : (\n              <div id=\"upload-img-placeholder\">\n                <img src=\"/images/icons/camera.png\" />\n                <span>이미지를 업로드해주세요.</span>\n              </div>\n            )}\n          </Upload>\n        </Form.Item>\n        <Divider />\n        <Form.Item\n          label={<div className=\"upload-label\">판매자 명</div>}\n          name=\"seller\"\n          rules={[{ required: true, message: \"판매자 이름을 입력해주세요\" }]}\n        >\n          <Input\n            className=\"upload-name\"\n            size=\"large\"\n            placeholder=\"이름을 입력해주세요.\"\n          />\n        </Form.Item>\n        <Divider />\n        <Form.Item\n          name=\"name\"\n          label={<div className=\"upload-label\">상품 이름</div>}\n          rules={[{ required: true, message: \"상품 이름을 입력해주세요\" }]}\n        >\n          <Input\n            className=\"upload-name\"\n            size=\"large\"\n            placeholder=\"상품 이름을 입력해주세요\"\n          />\n        </Form.Item>\n        <Divider />\n        <Form.Item\n          name=\"price\"\n          label={<div className=\"upload-label\">상품 가격</div>}\n          rules={[{ required: true, message: \"상품 가격을 입력해주세요\" }]}\n        >\n          <InputNumber defaultValue={0} className=\"upload-price\" size=\"large\" />\n        </Form.Item>\n        <Divider />\n        <Form.Item\n          name=\"description\"\n          label={<div className=\"upload-label\">상품 소개</div>}\n          rules={[{ required: true, message: \"상품 소개를 입력해주세요.\" }]}\n        >\n          <Input.TextArea\n            size=\"large\"\n            id=\"product-description\"\n            showCount\n            maxLength={300}\n            placeholder=\"상품 소개를 적어주세요.\"\n          />\n        </Form.Item>\n        <Form.Item>\n          <Button id=\"submit-button\" size=\"large\" htmlType=\"submit\">\n            상품 등록하기\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n\nexport default UploadPage;\n","/home/ubuntu/ci-cd/market-froent/src/product/index.js",["56","57","58"],"import { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport { API_URL } from \"../config/constants\";\nimport dayjs from \"dayjs\";\nimport { Button, message, Spin } from \"antd\";\nimport ProductCard from \"../components/productCard\";\n\nfunction ProductPage() {\n  const { id } = useParams();\n  const [product, setProduct] = useState(null);\n  const [products, setProducts] = useState([]);\n  const getProduct = () => {\n    axios\n      .get(`${API_URL}/products/${id}`)\n      .then((result) => {\n        setProduct(result.data.product);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  const getRecommendations = () => {\n    axios\n      .get(`${API_URL}/products/${id}/recommendation`)\n      .then((result) => {\n        setProducts(result.data.products);\n        console.log(result.data.products);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  useEffect(() => {\n    getProduct();\n    getRecommendations();\n  }, [id]);\n\n  if (product === null) {\n    return (\n      <div style={{ textAlign: \"center\", paddingTop: 32 }}>\n        <Spin size=\"large\" />\n      </div>\n    );\n  }\n\n  const onClickPurchase = () => {\n    axios\n      .post(`${API_URL}/purchase/${id}`)\n      .then((result) => {\n        message.info(\"구매가 완료되었습니다\");\n        getProduct();\n      })\n      .catch((error) => {\n        message.error(`에러가 발생했습니다. ${error.message}`);\n      });\n  };\n\n  return (\n    <div>\n      <div id=\"image-box\">\n        <img src={`${API_URL}/${product.imageUrl}`} />\n      </div>\n      <div id=\"profile-box\">\n        <img src=\"/images/icons/avatar.png\" />\n        <span>{product.seller}</span>\n      </div>\n      <div id=\"contents-box\">\n        <div id=\"name\">{product.name}</div>\n        <div id=\"price\">{product.price}원</div>\n        <div id=\"createdAt\">\n          {dayjs(product.createdAt).format(\"YYYY년 MM월 DD일\")}\n        </div>\n        <Button\n          id=\"purchase-button\"\n          size=\"large\"\n          type=\"primary\"\n          danger\n          onClick={onClickPurchase}\n          disabled={product.soldout === 1}\n        >\n          재빨리 구매하기\n        </Button>\n        <div id=\"description-box\">\n          <pre id=\"description\">{product.description} </pre>\n        </div>\n        <div>\n          <h1>추천 상품</h1>\n          <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n            {products.map((product, index) => {\n              return <ProductCard key={index} product={product} />;\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProductPage;\n","/home/ubuntu/ci-cd/market-froent/src/config/constants.js",[],"/home/ubuntu/ci-cd/market-froent/src/components/productCard.js",["59","60"],"import { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/ko\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport { API_URL } from \"../config/constants\";\ndayjs.extend(relativeTime);\ndayjs.locale(\"ko\");\n\nfunction ProductCard(props) {\n  const product = props.product;\n  return (\n    <div className=\"product-card\">\n      {product.soldout === 1 && <div className=\"product-blur\" />}\n      <Link\n        style={{ color: \"inherit\" }}\n        className=\"product-link\"\n        to={`/products/${product.id}`}\n      >\n        <div>\n          <img className=\"product-img\" src={`${API_URL}/${product.imageUrl}`} />\n        </div>\n        <div className=\"product-contents\">\n          <span className=\"product-name\">{product.name}</span>\n          <span className=\"product-price\">{product.price}원</span>\n          <div className=\"product-footer\">\n            <div className=\"product-seller\">\n              <img className=\"product-avatar\" src=\"/images/icons/avatar.png\" />\n              <span>{product.seller}</span>\n            </div>\n            <span className=\"product-date\">\n              {dayjs(product.createdAt).fromNow()}\n            </span>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nexport default ProductCard;\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":10,"nodeType":"67","messageId":"68","endLine":1,"endColumn":14},{"ruleId":"65","severity":1,"message":"69","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":16},{"ruleId":"65","severity":1,"message":"70","line":3,"column":10,"nodeType":"67","messageId":"68","endLine":3,"endColumn":16},{"ruleId":"65","severity":1,"message":"71","line":12,"column":11,"nodeType":"67","messageId":"68","endLine":12,"endColumn":18},{"ruleId":"72","severity":1,"message":"73","line":10,"column":17,"nodeType":"74","endLine":10,"endColumn":53},{"ruleId":"72","severity":1,"message":"73","line":54,"column":17,"nodeType":"74","endLine":54,"endColumn":62},{"ruleId":"65","severity":1,"message":"75","line":11,"column":10,"nodeType":"67","messageId":"68","endLine":11,"endColumn":22},{"ruleId":"72","severity":1,"message":"73","line":64,"column":15,"nodeType":"74","endLine":64,"endColumn":69},{"ruleId":"72","severity":1,"message":"73","line":67,"column":17,"nodeType":"74","endLine":67,"endColumn":55},{"ruleId":"76","severity":1,"message":"77","line":38,"column":6,"nodeType":"78","endLine":38,"endColumn":10,"suggestions":"79"},{"ruleId":"72","severity":1,"message":"73","line":63,"column":9,"nodeType":"74","endLine":63,"endColumn":55},{"ruleId":"72","severity":1,"message":"73","line":66,"column":9,"nodeType":"74","endLine":66,"endColumn":47},{"ruleId":"72","severity":1,"message":"73","line":20,"column":11,"nodeType":"74","endLine":20,"endColumn":81},{"ruleId":"72","severity":1,"message":"73","line":27,"column":15,"nodeType":"74","endLine":27,"endColumn":80},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Button' is defined but never used.","'history' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ForkOutlined' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getProduct' and 'getRecommendations'. Either include them or remove the dependency array.","ArrayExpression",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [getProduct, getRecommendations, id]",{"range":"85","text":"86"},[1054,1058],"[getProduct, getRecommendations, id]"]